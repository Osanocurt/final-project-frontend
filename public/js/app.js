"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function FeedbacksIndexController(e){var t=this;t.all=e.query()}function FeedbacksShowController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}var s=this;s.feedback=e.get(t.params),s.isLoggedIn=r.isAuthenticated,s.isCurrentFeedback=o}function Feedback(e,t){return new e(t+"/feedbacks/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,r){function o(){e.logout().then(function(){t.go("usersIndex")})}function s(r,o,s){(!e.isAuthenticated()&&n.includes(o.name)||"usersEdit"===o.name&&parseFloat(s.id)!==e.getPayload().id)&&(r.preventDefault(),t.go("login"))}var l=this;l.isLoggedIn=e.isAuthenticated,l.message=null;var n=["usersEdit"];r.$on("$stateChangeStart",s),l.logout=o}function RequestsNewController(e,t,r){function o(){e.save(s.request)}var s=this;s.request={},s.createRequest=o,s.isLoggedIn=r.isAuthenticated}function RequestsIndexController(e){var t=this;t.all=e.query()}function RequestsShowController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}var s=this;s.request=e.get(t.params),s.isLoggedIn=r.isAuthenticated,s.isCurrentRequest=o}function Request(e,t){return new e(t+"/requests/:id",{id:"@id"},{update:{method:"PUT"}})}function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("feedbacksIndex",{url:"/feedbacks",templateUrl:"/templates/feedbacksIndex.html",controller:"FeedbacksIndexController as feedbacksIndex"}).state("feedbacksNew",{url:"/feedbacks/new",templateUrl:"/templates/feedbacksNew.html",controller:"FeedbacksNewController as feedbacksNew"}).state("feedbacksShow",{url:"/feedbacks/:id",templateUrl:"/templates/feedbacksShow.html",controller:"FeedbacksShowController as feedbacksShow"}).state("requestsIndex",{url:"/requests",templateUrl:"/templates/requestsIndex.html",controller:"RequestsIndexController as requestsIndex"}).state("requestsNew",{url:"/requests/new",templateUrl:"/templates/requestsNew.html",controller:"RequestsNewController as requestsNew"}).state("requestsShow",{url:"/requests/:id",templateUrl:"/templates/requestsShow.html",controller:"RequestsShowController as requestsShow"}),t.otherwise("/users")}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){l.user.$remove(function(){t.go("usersIndex")})}function s(){return r.getPayload().id===parseFloat(t.params.id)}var l=this;l.user=e.get(t.params),l.delete=o,l.isLoggedIn=r.isAuthenticated,l.isCurrentUser=s}function UsersEditController(e,t){function r(){o.user.$update(function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),this.update=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("FeedbacksIndexController",FeedbacksIndexController).controller("FeedbacksShowController",FeedbacksShowController),FeedbacksIndexController.$inject=["Feedback"],FeedbacksShowController.$inject=["Feedback","$state","$auth"],angular.module("finalProject").factory("Feedback",Feedback),Feedback.$inject=["$resource","API_URL"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").controller("RequestsIndexController",RequestsIndexController).controller("RequestsNewController",RequestsNewController).controller("RequestsShowController",RequestsShowController),RequestsNewController.$inject=["Request","$state","$auth"],RequestsIndexController.$inject=["Request"],RequestsShowController.$inject=["Request","$state","$auth"],angular.module("finalProject").factory("Request",Request),Request.$inject=["$resource","API_URL"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"];
//# sourceMappingURL=app.js.map
