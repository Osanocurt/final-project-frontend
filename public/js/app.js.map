{"version":3,"sources":["js/app.js","controllers/auth.js","controllers/feedback.js","models/feedback.js","controllers/main.js","js/router.js","controllers/user.js","models/user.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","FeedbacksIndexController","Feedback","feedbacksIndex","all","query","FeedbacksShowController","deleteFeedback","feedbacksShow","feedback","$remove","isCurrentFeedback","getPayload","id","parseFloat","params","get","delete","isLoggedIn","isAuthenticated","FeedbacksEditController","update","feedbacksEdit","$update","$resource","method","MainController","$rootScope","logout","secureState","e","toState","toParams","protectedStates","includes","name","preventDefault","main","message","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","User","usersIndex","HomeController","Home","home","UsersShowController","deleteUser","usersShow","isCurrentUser","UsersEditController","usersEdit","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n  \n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('FeedbacksIndexController', FeedbacksIndexController)\n  .controller('FeedbacksShowController', FeedbacksShowController)\n  .controller('FeedbacksEditController', FeedbacksEditController);\n\n\nFeedbacksIndexController.$inject = ['Feedback'];\nfunction FeedbacksIndexController(Feedback) {\n  const feedbacksIndex = this;\n\n  feedbacksIndex.all = Feedback.query();\n}\n\nFeedbacksShowController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksShowController(Feedback, $state, $auth) {\n  const feedbacksShow = this;\n  feedbacksShow.feedback = Feedback.get($state.params);\n\n  function deleteFeedback() {\n    feedbacksShow.feedback.$remove(() => {\n      $state.go('feedbacksIndex');\n    });\n  }\n  feedbacksShow.delete = deleteFeedback;\n  feedbacksShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentFeedback() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  feedbacksShow.isCurrentFeedback = isCurrentFeedback;\n}\n\nFeedbacksEditController.$inject = ['Feedback', '$state'];\nfunction FeedbacksEditController(Feedback, $state) {\n  const feedbacksEdit = this;\n  feedbacksEdit.feedback = Feedback.get($state.params);\n\n  function update() {\n    feedbacksEdit.feedback.$update(() => {\n      $state.go('feedbacksShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('Feedback', Feedback);\n\nFeedback.$inject = ['$resource', 'API_URL'];\nfunction Feedback($resource, API_URL) {\n  return new $resource(`${API_URL}/feedbacks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular\n  .module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth','$state','$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n\n  }\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n      protectedStates.includes(toState.name)) ||\n      toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('home', {\n      url: '/home',\n      templateUrl: '/templates/home.html',\n      controller: 'HomeController as home'\n    })\n    .state('feedbacksIndex', {\n      url: '/feedbacks',\n      templateUrl: '/templates/feedbacksIndex.html',\n      controller: 'FeedbacksIndexController as feedbacksIndex'\n    })\n    .state('feedbacksShow', {\n      url: '/feedbacks/:id',\n      templateUrl: '/templates/feedbacksShow.html',\n      controller: 'FeedbacksShowController as feedbacksShow'\n    })\n    .state('feedbacksEdit', {\n      url: '/feedbacks/:id/edit',\n      templateUrl: '/templates/feedbacksEdit.html',\n      controller: 'FeedbacksEditController as feedbacksEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController)\n  .controller('HomeController', HomeController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\nHomeController.$inject = ['Home'];\nfunction HomeController(Home) {\n  const home = this;\n\n  home.all = Home.query();\n}\n\n\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  usersShow.isCurrentUser = isCurrentUser;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}