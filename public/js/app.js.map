{"version":3,"sources":["js/app.js","controllers/auth.js","js/directives/dragDrop.js","models/feedback.js","controllers/feedback.js","js/directives/googleMap.js","controllers/main.js","controllers/picture.js","models/request.js","controllers/request.js","js/router.js","controllers/user.js","models/user.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","id","getPayload","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","src","link","$scope","element","active","$watchGroup","image","console","log","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Feedback","$resource","update","method","FeedbacksNewController","createFeedback","feedbacksNew","feedback","save","isLoggedIn","isAuthenticated","FeedbacksIndexController","feedbacksIndex","all","query","FeedbacksShowController","isCurrentFeedback","parseFloat","params","feedbacksShow","get","FeedbacksEditController","feedbacksEdit","$update","googleMap","$window","template","center","jobs","clearMarkers","markers","forEach","marker","setMap","calcRoute","origin","destination","start","end","request","travelMode","directionsService","route","status","directionsDisplay","setDirections","google","maps","DirectionsService","DirectionsRenderer","map","Map","zoom","$watch","job","Marker","position","lat","location_lat","lng","location_lng","animation","Animation","DROP","addListener","infoWindow","open","push","destination_lat","destination_lng","contentString","value","earliest_pickup","InfoWindow","content","googleplace","require","attrs","model","options","types","componentRestrictions","autocomplete","places","Autocomplete","place","getPlace","latLng","geometry","location","toJSON","attr","$setViewValue","val","MainController","$rootScope","logout","secureState","toState","toParams","protectedStates","includes","name","main","message","$on","PicturesAfterController","User","picturesAfter","_id","Request","accept","url","decline","RequestsNewController","createRequest","requestsNew","itemDelivered","RequestsIndexController","$accept","reload","$decline","currentUser","requestsIndex","RequestsShowController","isCurrentRequest","requestsShow","Router","$stateProvider","$urlRouterProvider","state","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","$remove","isRunner","user_type","isCustomer","delete","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersShow', {id: $auth.getPayload().id});\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('Feedback', Feedback);\n\nFeedback.$inject = ['$resource', 'API_URL'];\nfunction Feedback($resource, API_URL) {\n  return new $resource(`${API_URL}/feedbacks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('FeedbacksIndexController', FeedbacksIndexController)\n  .controller('FeedbacksNewController', FeedbacksNewController)\n  .controller('FeedbacksShowController', FeedbacksShowController)\n  .controller('FeedbacksEditController', FeedbacksEditController);\n\n\n\nFeedbacksNewController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksNewController(Feedback, $state, $auth) {\n  const feedbacksNew = this;\n  feedbacksNew.feedback = {};\n\n  function createFeedback() {\n    console.log('Going to try to save: ', feedbacksNew.feedback);\n    Feedback.save(feedbacksNew.feedback);\n    $state.go('feedbacksIndex');\n\n  }\n  feedbacksNew.createFeedback = createFeedback;\n  feedbacksNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nFeedbacksIndexController.$inject = ['Feedback'];\nfunction FeedbacksIndexController(Feedback) {\n  const feedbacksIndex = this;\n\n  feedbacksIndex.all = Feedback.query();\n}\n\nFeedbacksShowController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksShowController(Feedback, $state, $auth) {\n  const feedbacksShow = this;\n  feedbacksShow.feedback = Feedback.get($state.params);\n\n\n  feedbacksShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentFeedback() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  feedbacksShow.isCurrentFeedback = isCurrentFeedback;\n}\nFeedbacksEditController.$inject = ['Feedback', '$state'];\nfunction FeedbacksEditController(Feedback, $state) {\n  const feedbacksEdit = this;\n  feedbacksEdit.feedback = Feedback.get($state.params);\n\n  function update() {\n    feedbacksEdit.feedback.$update(() => {\n      $state.go('feedbacksShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap)\n  .directive('googleplace', googleplace);\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '=',\n      jobs: '='\n    },\n    link: function($scope, element) {\n      let directionsDisplay = null;\n      const directionsService = new google.maps.DirectionsService();\n\n      directionsDisplay = new google.maps.DirectionsRenderer();\n      const map = new $window.google.maps.Map(element[0], {\n        center: $scope.center,\n        zoom: 14\n      });\n\n      directionsDisplay.setMap(map);\n\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n      }\n\n      function calcRoute(origin, destination) {\n        var start = origin;\n        var end = destination;\n        var request = {\n          origin: start,\n          destination: end,\n          travelMode: 'DRIVING'\n        };\n        directionsService.route(request, function(result, status) {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      }\n\n      $scope.$watch('jobs', () => {\n        clearMarkers();\n        if($scope.jobs) {\n          $scope.jobs.forEach((job) => {\n            // Create a marker for each job\n            const marker = new $window.google.maps.Marker({\n              position: { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n            marker.addListener('click', () => {\n              infoWindow.open(map, marker);\n              markers.push(marker);\n              // Creating googlemap latLng objects with the selected job lat and lngs\n              const origin = { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) };\n              const destination = { lat: parseFloat(job.destination_lat), lng: parseFloat(job.destination_lng) };\n              // On click, we calculate the route based on the job origin and destination objects\n              calcRoute(origin, destination);\n            });\n            const contentString = `\n              <p>Value: ${job.value}</p>\n              <p>Earliest Pickup: ${job.earliest_pickup}</p>\n            `;\n            const infoWindow = new $window.google.maps.InfoWindow({\n              content: contentString\n            });\n          });\n        }\n      }, true);\n    }\n  };\n}\n\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      request: '='\n    },\n    link: function(scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: {}\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n        console.log('element', element.attr('id'));\n        const id = element.attr('id');\n        if(id === 'origin-input') {\n          scope.request.location_lat = latLng.lat;\n          scope.request.location_lng = latLng.lng;\n        } else if (id === 'destination-input') {\n          scope.request.destination_lat = latLng.lat;\n          scope.request.destination_lng = latLng.lng;\n        }\n        // scope.request.lat = latLng.lat;\n        // scope.request.lng = latLng.lng;\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular\n  .module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth','$state','$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('login');\n    });\n\n  }\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n      protectedStates.includes(toState.name)) ||\n      toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go();\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","angular.module('finalProject')\n  .factory('Request', Request);\n\nRequest.$inject = ['$resource', 'API_URL'];\nfunction Request($resource, API_URL) {\n  return new $resource(`${API_URL}/requests/:id`, { id: '@id' }, {\n    update: { method: 'PUT' },\n    accept: { method: 'POST', url: `${API_URL}/requests/:id/accept` },\n    decline: { method: 'POST', url: `${API_URL}/requests/:id/decline` }\n  });\n}\n","angular.module('finalProject')\n  .controller('RequestsIndexController', RequestsIndexController)\n  .controller('RequestsNewController', RequestsNewController)\n  .controller('RequestsShowController', RequestsShowController);\n\n\n\nRequestsNewController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsNewController(Request, $state, $auth) {\n  const requestsNew = this;\n  requestsNew.request = {};\n\n  function createRequest() {\n    console.log('Going to try to save: ', requestsNew.request);\n    Request.save(requestsNew.request);\n    $state.go('requestsIndex');\n  }\n\n  function itemDelivered() {\n    console.log('Hi Curtis!!');\n  }\n  requestsNew.itemDelivered = itemDelivered;\n  requestsNew.createRequest = createRequest;\n  requestsNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nRequestsIndexController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsIndexController(Request, $state, $auth) {\n  const requestsIndex = this;\n\n  requestsIndex.all = Request.query();\n\n  function accept(request) {\n    request.$accept(() => {\n      console.log(request.id + ' was accepted');\n      $state.reload();\n    });\n  }\n  requestsIndex.accept = accept;\n\n  function decline(request) {\n    request.$decline(() => {\n      console.log(decline.id + ' was declined');\n      $state.reload();\n    });\n  }\n  requestsIndex.decline = decline;\n\n  function currentUser() {\n    return $auth.getPayload().id;\n  }\n  requestsIndex.currentUser = currentUser;\n\n}\n\n\nRequestsShowController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsShowController(Request, $state, $auth) {\n  const requestsShow = this;\n  requestsShow.request = Request.get($state.params);\n\n\n  requestsShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentRequest() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  function currentUser() {\n    return $auth.getPayload().id;\n  }\n  requestsShow.currentUser = currentUser;\n  requestsShow.isCurrentRequest = isCurrentRequest;\n\n\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('usersShow', {\n      url: '/profile',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('feedbacksIndex', {\n      url: '/feedbacks',\n      templateUrl: '/templates/feedbacksIndex.html',\n      controller: 'FeedbacksIndexController as feedbacksIndex'\n    })\n    .state('feedbacksNew', {\n      url: '/feedbacks/new',\n      templateUrl: '/templates/feedbacksNew.html',\n      controller: 'FeedbacksNewController as feedbacksNew'\n    })\n    .state('feedbacksShow', {\n      url: '/feedbacks/:id',\n      templateUrl: '/templates/feedbacksShow.html',\n      controller: 'FeedbacksShowController as feedbacksShow'\n    })\n    .state('feedbacksEdit', {\n      url: '/feedbacks/:id/edit',\n      templateUrl: '/templates/feedbacksShow.html',\n      controller: 'FeedbacksShowController as feedbacksShow'\n    })\n    .state('requestsIndex', {\n      url: '/requests',\n      templateUrl: '/templates/requestsIndex.html',\n      controller: 'RequestsIndexController as requestsIndex'\n    })\n    .state('requestsNew', {\n      url: '/requests/new',\n      templateUrl: '/templates/requestsNew.html',\n      controller: 'RequestsNewController as requestsNew'\n    })\n    .state('requestsShow', {\n      url: '/requests/:id',\n      templateUrl: '/templates/requestsShow.html',\n      controller: 'RequestsShowController as requestsShow'\n    })\n    .state('track', {\n      url: '/track',\n      templateUrl: '/templates/track.html',\n      controller: 'RequestsNewController as requestsNew'\n    })\n    .state('map', {\n      url: '/map',\n      templateUrl: '/templates/map.html'\n    });\n  $urlRouterProvider.otherwise('/login');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  User.get({ id: $auth.getPayload().id }, (user) => {\n    usersShow.user = user;\n\n    console.log(user);\n\n    usersShow.isRunner = user.user_type === 'Runner';\n    usersShow.isCustomer = user.user_type === 'Customer';\n  });\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}