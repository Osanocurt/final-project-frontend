{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/controllers/feedback.js","models/feedback.js","js/directives/googleMap.js","js/controllers/main.js","js/controllers/picture.js","js/controllers/request.js","models/request.js","js/router.js","models/user.js","js/controllers/user.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","id","getPayload","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","src","link","$scope","element","active","$watchGroup","image","console","log","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","FeedbacksNewController","Feedback","createFeedback","feedbacksNew","feedback","save","runner_id","params","runnerId","request_id","requestId","isLoggedIn","isAuthenticated","FeedbacksIndexController","feedbacksIndex","all","query","FeedbacksShowController","isCurrentFeedback","parseFloat","feedbacksShow","get","FeedbacksEditController","update","feedbacksEdit","$update","$resource","method","googleMap","$window","template","center","jobs","clearMarkers","markers","forEach","marker","setMap","calcRoute","origin","destination","start","end","request","travelMode","directionsService","route","status","directionsDisplay","setDirections","google","maps","DirectionsService","DirectionsRenderer","map","Map","lat","lng","scrollwheel","zoom","styles","featureType","stylers","saturation","hue","visibility","$watch","job","Marker","position","location_lat","location_lng","animation","Animation","DROP","addListener","infoWindow","open","push","destination_lat","destination_lng","contentString","value","earliest_pickup","item_description","customer","username","InfoWindow","content","googleplace","require","attrs","model","options","types","componentRestrictions","autocomplete","places","Autocomplete","place","getPlace","latLng","geometry","location","toJSON","attr","$setViewValue","val","MainController","$rootScope","logout","secureState","toState","toParams","protectedStates","includes","name","main","message","currentUserType","user_type","currentUserId","$on","PicturesAfterController","User","picturesAfter","_id","RequestsNewController","Request","createRequest","requestsNew","itemDelivered","RequestsIndexController","canShowAcceptButton","job_accepted","accept","requestAccepted","requestsIndex","canShowDeliverButton","delivered","runner","deliver","deliveredRequest","canShowFeedbackButton","RequestsShowController","isCurrentRequest","currentUser","requestsShow","url","Router","$stateProvider","$urlRouterProvider","state","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","$remove","isRunner","isCustomer","loggedInUserId","delete","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersShow', {id: $auth.getPayload().id});\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .controller('FeedbacksIndexController', FeedbacksIndexController)\n  .controller('FeedbacksNewController', FeedbacksNewController)\n  .controller('FeedbacksShowController', FeedbacksShowController)\n  .controller('FeedbacksEditController', FeedbacksEditController);\n\n\n\nFeedbacksNewController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksNewController(Feedback, $state, $auth) {\n  const feedbacksNew = this;\n  feedbacksNew.feedback = {\n    runner_id: $state.params.runnerId,\n    request_id: $state.params.requestId\n  };\n\n  function createFeedback() {\n    console.log('Going to try to save: ', feedbacksNew.feedback);\n    Feedback.save(feedbacksNew.feedback);\n    $state.go('feedbacksIndex');\n\n  }\n  feedbacksNew.createFeedback = createFeedback;\n  feedbacksNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nFeedbacksIndexController.$inject = ['Feedback'];\nfunction FeedbacksIndexController(Feedback) {\n  const feedbacksIndex = this;\n\n  feedbacksIndex.all = Feedback.query();\n  console.log(feedbacksIndex.all);\n\n}\nFeedbacksShowController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksShowController(Feedback, $state, $auth) {\n  const feedbacksShow = this;\n  feedbacksShow.feedback = Feedback.get($state.params);\n\n\n  feedbacksShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentFeedback() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  feedbacksShow.isCurrentFeedback = isCurrentFeedback;\n}\nFeedbacksEditController.$inject = ['Feedback', '$state'];\nfunction FeedbacksEditController(Feedback, $state) {\n  const feedbacksEdit = this;\n  feedbacksEdit.feedback = Feedback.get($state.params);\n\n  function update() {\n    feedbacksEdit.feedback.$update(() => {\n      $state.go('feedbacksShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('Feedback', Feedback);\n\nFeedback.$inject = ['$resource', 'API_URL'];\nfunction Feedback($resource, API_URL) {\n  return new $resource(`${API_URL}/feedbacks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap)\n  .directive('googleplace', googleplace);\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '=',\n      jobs: '='\n    },\n    link: function($scope, element) {\n      let directionsDisplay = null;\n      const directionsService = new google.maps.DirectionsService();\n\n      directionsDisplay = new google.maps.DirectionsRenderer();\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: 51 , lng: -0.1 },\n        scrollwheel: false,\n        zoom: 7,\n        styles: [\n          {\n            'featureType': 'all',\n            'stylers': [\n              {\n                'saturation': 0\n              },\n              {\n                'hue': '#e7ecf0'\n              }\n            ]\n          },\n          {\n            'featureType': 'road',\n            'stylers': [\n              {\n                'saturation': -70\n              }\n            ]\n          },\n          {\n            'featureType': 'transit',\n            'stylers': [\n              {\n                'visibility': 'off'\n              }\n            ]\n          },\n          {\n            'featureType': 'poi',\n            'stylers': [\n              {\n                'visibility': 'off'\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'stylers': [\n              {\n                'visibility': 'simplified'\n              },\n              {\n                'saturation': -60\n              }\n            ]\n          }\n        ]\n      });\n\n      directionsDisplay.setMap(map);\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n\n      }\n\n      function calcRoute(origin, destination) {\n        var start = origin;\n        var end = destination;\n        var request = {\n          origin: start,\n          destination: end,\n          travelMode: 'DRIVING'\n        };\n        directionsService.route(request, function(result, status) {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      }\n\n      $scope.$watch('jobs', () => {\n        clearMarkers();\n        if($scope.jobs) {\n          $scope.jobs.forEach((job) => {\n            // Create a marker for each job\n            const marker = new $window.google.maps.Marker({\n              position: { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n            marker.addListener('click', () => {\n              infoWindow.open(map, marker);\n              markers.push(marker);\n              // Creating googlemap latLng objects with the selected job lat and lngs\n              const origin = { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) };\n              const destination = { lat: parseFloat(job.destination_lat), lng: parseFloat(job.destination_lng) };\n              // On click, we calculate the route based on the job origin and destination objects\n              calcRoute(origin, destination);\n            });\n            const contentString = `\n              <p>Value: ${job.value}</p>\n              <p>Earliest Pickup: ${job.earliest_pickup}</p>\n              <p>Description: ${job.item_description}</p>\n              <p>Customer: ${job.customer.username}</p>\n            `;\n            const infoWindow = new $window.google.maps.InfoWindow({\n              content: contentString\n            });\n          });\n        }\n      }, true);\n    }\n  };\n}\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      request: '='\n    },\n    link: function(scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: {}\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n        console.log('element', element.attr('id'));\n        const id = element.attr('id');\n        if(id === 'origin-input') {\n          scope.request.location_lat = latLng.lat;\n          scope.request.location_lng = latLng.lng;\n        } else if (id === 'destination-input') {\n          scope.request.destination_lat = latLng.lat;\n          scope.request.destination_lng = latLng.lng;\n        }\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular\n  .module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth','$state','$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  if($auth.isAuthenticated()) {\n    main.currentUserType = $auth.getPayload().user_type;\n    main.currentUserId = $auth.getPayload().id;\n  }\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('login');\n    });\n\n  }\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n      protectedStates.includes(toState.name)) ||\n      toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go();\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","angular.module('finalProject')\n  .controller('RequestsIndexController', RequestsIndexController)\n  .controller('RequestsNewController', RequestsNewController)\n  .controller('RequestsShowController', RequestsShowController);\n\n\n\nRequestsNewController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsNewController(Request, $state, $auth) {\n  const requestsNew = this;\n  requestsNew.request = {};\n\n  function createRequest() {\n    console.log('Going to try to save: ', requestsNew.request);\n    Request.save(requestsNew.request);\n    $state.go('requestsIndex');\n  }\n\n  function itemDelivered() {\n    console.log('Hi Curtis!!');\n  }\n  requestsNew.itemDelivered = itemDelivered;\n  requestsNew.createRequest = createRequest;\n  requestsNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nRequestsIndexController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsIndexController(Request, $state, $auth) {\n  const requestsIndex = this;\n  const currentUserId = $auth.getPayload().id;\n\n  requestsIndex.all = Request.query();\n  console.log(requestsIndex.all);\n\n  function canShowAcceptButton(request) {\n    return request.customer.id !== currentUserId && !request.job_accepted;\n  }\n  requestsIndex.canShowAcceptButton = canShowAcceptButton;\n\n  function accept(request) {\n    Request.accept({id: request.id}, (requestAccepted) => {\n      console.log(requestAccepted.id + ' was accepted');\n      requestsIndex.all = Request.query();\n    });\n  }\n  requestsIndex.accept = accept;\n\n  function canShowDeliverButton(request) {\n    console.log('canShowDeliverButton: request:', request);\n    return request.customer.id !== currentUserId &&\n      request.job_accepted &&\n      !request.delivered &&\n      request.runner &&\n      request.runner.id === currentUserId;\n  }\n  requestsIndex.canShowDeliverButton = canShowDeliverButton;\n\n  function deliver(request) {\n    Request.deliver({ id: request.id}, (deliveredRequest) => {\n      console.log('request delivered:', deliveredRequest);\n      requestsIndex.all = Request.query();\n    });\n  }\n  requestsIndex.deliver = deliver;\n\n  function canShowFeedbackButton(request) {\n    // console.log('csfb', request.customer.id, currentUserId, request.delivered);\n    return request.customer.id === currentUserId && request.delivered;\n  }\n  requestsIndex.canShowFeedbackButton = canShowFeedbackButton;\n}\n\nRequestsShowController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsShowController(Request, $state, $auth) {\n  const requestsShow = this;\n  requestsShow.request = Request.get($state.params);\n\n\n  requestsShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentRequest() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  function currentUser() {\n    console.log('RequestsShowController: $auth.getPayload():', $auth.getPayload());\n    return $auth.getPayload().id;\n  }\n\n  requestsShow.currentUser = currentUser;\n  requestsShow.isCurrentRequest = isCurrentRequest;\n\n\n}\n","angular.module('finalProject')\n  .factory('Request', Request);\n\nRequest.$inject = ['$resource', 'API_URL'];\nfunction Request($resource, API_URL) {\n  return new $resource(`${API_URL}/requests/:id`, { id: '@id' }, {\n    update: { method: 'PUT' },\n    accept: { method: 'POST', url: `${API_URL}/requests/:id/accept` },\n    deliver: { method: 'POST', url: `${API_URL}/requests/:id/deliver` }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n  .state('landing', {\n    url: '/',\n    templateUrl: '/templates/landing.html'\n  })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('usersShow', {\n      url: '/profile/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('feedbacksIndex', {\n      url: '/feedbacks',\n      templateUrl: '/templates/feedbacksIndex.html',\n      controller: 'FeedbacksIndexController as feedbacksIndex'\n    })\n    .state('feedbacksNew', {\n      url: '/feedbacks/new/:requestId/:runnerId',\n      templateUrl: '/templates/feedbacksNew.html',\n      controller: 'FeedbacksNewController as feedbacksNew'\n    })\n    .state('feedbacksShow', {\n      url: '/feedbacks/:id',\n      templateUrl: '/templates/feedbacksShow.html',\n      controller: 'FeedbacksShowController as feedbacksShow'\n    })\n    .state('feedbacksEdit', {\n      url: '/feedbacks/:id/edit',\n      templateUrl: '/templates/feedbacksEdit.html',\n      controller: 'FeedbacksEditController as feedbacksEdit'\n    })\n    .state('requestsIndex', {\n      url: '/requests',\n      templateUrl: '/templates/requestsIndex.html',\n      controller: 'RequestsIndexController as requestsIndex'\n    })\n    .state('requestsNew', {\n      url: '/requests/new',\n      templateUrl: '/templates/requestsNew.html',\n      controller: 'RequestsNewController as requestsNew'\n    })\n    .state('requestsShow', {\n      url: '/requests/:id',\n      templateUrl: '/templates/requestsShow.html',\n      controller: 'RequestsShowController as requestsShow'\n\n    });\n  $urlRouterProvider.otherwise('/register');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  User.get({ id: $state.params.id }, (user) => {\n    usersShow.user = user;\n\n    console.log(user);\n\n    usersShow.isRunner = user.user_type === 'Runner';\n    usersShow.isCustomer = user.user_type === 'Customer';\n  });\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $auth.logout()\n      .then(() => {\n        $state.go('landing');\n      });\n    });\n  }\n\n  usersShow.loggedInUserId = $auth.getPayload().id;\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n"]}