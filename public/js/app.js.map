{"version":3,"sources":["js/app.js","controllers/auth.js","js/directives/dragDrop.js","models/feedback.js","controllers/feedback.js","js/directives/googleMap.js","controllers/main.js","controllers/picture.js","controllers/request.js","models/request.js","js/router.js","controllers/user.js","models/user.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","id","getPayload","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","src","link","$scope","element","active","$watchGroup","image","console","log","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Feedback","$resource","update","method","FeedbacksNewController","createFeedback","feedbacksNew","feedback","save","runner_id","params","runnerId","isLoggedIn","isAuthenticated","FeedbacksIndexController","feedbacksIndex","all","query","FeedbacksShowController","isCurrentFeedback","parseFloat","feedbacksShow","get","FeedbacksEditController","feedbacksEdit","$update","googleMap","$window","template","center","jobs","clearMarkers","markers","forEach","marker","setMap","calcRoute","origin","destination","start","end","request","travelMode","directionsService","route","status","directionsDisplay","setDirections","google","maps","DirectionsService","DirectionsRenderer","map","Map","zoom","$watch","job","Marker","position","lat","location_lat","lng","location_lng","animation","Animation","DROP","addListener","infoWindow","open","push","destination_lat","destination_lng","contentString","value","earliest_pickup","InfoWindow","content","googleplace","require","attrs","model","options","types","componentRestrictions","autocomplete","places","Autocomplete","place","getPlace","latLng","geometry","location","toJSON","attr","$setViewValue","val","MainController","$rootScope","logout","secureState","toState","toParams","protectedStates","includes","name","main","message","$on","PicturesAfterController","User","picturesAfter","_id","RequestsNewController","Request","createRequest","requestsNew","itemDelivered","RequestsIndexController","canShowAcceptButton","customer","currentUserId","job_accepted","accept","requestAccepted","requestsIndex","canShowDeliverButton","delivered","runner","deliver","deliveredRequest","canShowFeedbackButton","RequestsShowController","isCurrentRequest","currentUser","requestsShow","url","Router","$stateProvider","$urlRouterProvider","state","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","$remove","isRunner","user_type","isCustomer","delete","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersShow', {id: $auth.getPayload().id});\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('Feedback', Feedback);\n\nFeedback.$inject = ['$resource', 'API_URL'];\nfunction Feedback($resource, API_URL) {\n  return new $resource(`${API_URL}/feedbacks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('FeedbacksIndexController', FeedbacksIndexController)\n  .controller('FeedbacksNewController', FeedbacksNewController)\n  .controller('FeedbacksShowController', FeedbacksShowController)\n  .controller('FeedbacksEditController', FeedbacksEditController);\n\n\n\nFeedbacksNewController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksNewController(Feedback, $state, $auth) {\n  const feedbacksNew = this;\n  feedbacksNew.feedback = {\n    runner_id: $state.params.runnerId\n  };\n\n  function createFeedback() {\n    console.log('Going to try to save: ', feedbacksNew.feedback);\n    Feedback.save(feedbacksNew.feedback);\n    $state.go('feedbacksIndex');\n\n  }\n  feedbacksNew.createFeedback = createFeedback;\n  feedbacksNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nFeedbacksIndexController.$inject = ['Feedback'];\nfunction FeedbacksIndexController(Feedback) {\n  const feedbacksIndex = this;\n\n  feedbacksIndex.all = Feedback.query();\n}\n\nFeedbacksShowController.$inject = ['Feedback', '$state', '$auth'];\nfunction FeedbacksShowController(Feedback, $state, $auth) {\n  const feedbacksShow = this;\n  feedbacksShow.feedback = Feedback.get($state.params);\n\n\n  feedbacksShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentFeedback() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  feedbacksShow.isCurrentFeedback = isCurrentFeedback;\n}\nFeedbacksEditController.$inject = ['Feedback', '$state'];\nfunction FeedbacksEditController(Feedback, $state) {\n  const feedbacksEdit = this;\n  feedbacksEdit.feedback = Feedback.get($state.params);\n\n  function update() {\n    feedbacksEdit.feedback.$update(() => {\n      $state.go('feedbacksShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap)\n  .directive('googleplace', googleplace);\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '=',\n      jobs: '='\n    },\n    link: function($scope, element) {\n      let directionsDisplay = null;\n      const directionsService = new google.maps.DirectionsService();\n\n      directionsDisplay = new google.maps.DirectionsRenderer();\n      const map = new $window.google.maps.Map(element[0], {\n        center: $scope.center,\n        zoom: 14\n      });\n\n      directionsDisplay.setMap(map);\n\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n      }\n\n      function calcRoute(origin, destination) {\n        var start = origin;\n        var end = destination;\n        var request = {\n          origin: start,\n          destination: end,\n          travelMode: 'DRIVING'\n        };\n        directionsService.route(request, function(result, status) {\n          if (status === 'OK') {\n            directionsDisplay.setDirections(result);\n          }\n        });\n      }\n\n      $scope.$watch('jobs', () => {\n        clearMarkers();\n        if($scope.jobs) {\n          $scope.jobs.forEach((job) => {\n            // Create a marker for each job\n            const marker = new $window.google.maps.Marker({\n              position: { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n            marker.addListener('click', () => {\n              infoWindow.open(map, marker);\n              markers.push(marker);\n              // Creating googlemap latLng objects with the selected job lat and lngs\n              const origin = { lat: parseFloat(job.location_lat), lng: parseFloat(job.location_lng) };\n              const destination = { lat: parseFloat(job.destination_lat), lng: parseFloat(job.destination_lng) };\n              // On click, we calculate the route based on the job origin and destination objects\n              calcRoute(origin, destination);\n            });\n            const contentString = `\n              <p>Value: ${job.value}</p>\n              <p>Earliest Pickup: ${job.earliest_pickup}</p>\n            `;\n            const infoWindow = new $window.google.maps.InfoWindow({\n              content: contentString\n            });\n          });\n        }\n      }, true);\n    }\n  };\n}\n\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      request: '='\n    },\n    link: function(scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: {}\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n        console.log('element', element.attr('id'));\n        const id = element.attr('id');\n        if(id === 'origin-input') {\n          scope.request.location_lat = latLng.lat;\n          scope.request.location_lng = latLng.lng;\n        } else if (id === 'destination-input') {\n          scope.request.destination_lat = latLng.lat;\n          scope.request.destination_lng = latLng.lng;\n        }\n        // scope.request.lat = latLng.lat;\n        // scope.request.lng = latLng.lng;\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular\n  .module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth','$state','$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('login');\n    });\n\n  }\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n      protectedStates.includes(toState.name)) ||\n      toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n}\n","angular.module('finalProject')\n  .controller('PicturesAfterController', PicturesAfterController);\n\nPicturesAfterController.$inject = ['User', '$auth', '$state'];\nfunction PicturesAfterController(User, $auth, $state) {\n\n  const picturesAfter = this;\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    picturesAfter.user = user;\n  });\n\n  function save() {\n    User.update({ id: picturesAfter.user._id, image: 'after' }, picturesAfter.user, () => {\n      $state.go();\n    });\n  }\n\n  picturesAfter.save = save;\n}\n","angular.module('finalProject')\n  .controller('RequestsIndexController', RequestsIndexController)\n  .controller('RequestsNewController', RequestsNewController)\n  .controller('RequestsShowController', RequestsShowController);\n\n\n\nRequestsNewController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsNewController(Request, $state, $auth) {\n  const requestsNew = this;\n  requestsNew.request = {};\n\n  function createRequest() {\n    console.log('Going to try to save: ', requestsNew.request);\n    Request.save(requestsNew.request);\n    $state.go('requestsIndex');\n  }\n\n  function itemDelivered() {\n    console.log('Hi Curtis!!');\n  }\n  requestsNew.itemDelivered = itemDelivered;\n  requestsNew.createRequest = createRequest;\n  requestsNew.isLoggedIn = $auth.isAuthenticated;\n}\n\nRequestsIndexController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsIndexController(Request, $state, $auth) {\n  const requestsIndex = this;\n  const currentUserId = $auth.getPayload().id;\n\n  requestsIndex.all = Request.query();\n\n  function canShowAcceptButton(request) {\n    return request.customer.id !== currentUserId && !request.job_accepted;\n  }\n  requestsIndex.canShowAcceptButton = canShowAcceptButton;\n\n  function accept(request) {\n    Request.accept({id: request.id}, (requestAccepted) => {\n      console.log(requestAccepted.id + ' was accepted');\n      requestsIndex.all = Request.query();\n    });\n  }\n  requestsIndex.accept = accept;\n\n  function canShowDeliverButton(request) {\n    console.log('canShowDeliverButton: request:', request);\n    return request.customer.id !== currentUserId &&\n      request.job_accepted &&\n      !request.delivered &&\n      request.runner &&\n      request.runner.id === currentUserId;\n  }\n  requestsIndex.canShowDeliverButton = canShowDeliverButton;\n\n  function deliver(request) {\n    Request.deliver({ id: request.id}, (deliveredRequest) => {\n      console.log('request delivered:', deliveredRequest);\n      requestsIndex.all = Request.query();\n    });\n  }\n  requestsIndex.deliver = deliver;\n\n  function canShowFeedbackButton(request) {\n    return request.customer.id === currentUserId && request.delivered;\n  }\n  requestsIndex.canShowFeedbackButton = canShowFeedbackButton;\n}\n\nRequestsShowController.$inject = ['Request', '$state', '$auth'];\nfunction RequestsShowController(Request, $state, $auth) {\n  const requestsShow = this;\n  requestsShow.request = Request.get($state.params);\n\n\n  requestsShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentRequest() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n\n  function currentUser() {\n    console.log('RequestsShowController: $auth.getPayload():', $auth.getPayload());\n    return $auth.getPayload().id;\n  }\n\n  requestsShow.currentUser = currentUser;\n  requestsShow.isCurrentRequest = isCurrentRequest;\n\n\n}\n","angular.module('finalProject')\n  .factory('Request', Request);\n\nRequest.$inject = ['$resource', 'API_URL'];\nfunction Request($resource, API_URL) {\n  return new $resource(`${API_URL}/requests/:id`, { id: '@id' }, {\n    update: { method: 'PUT' },\n    accept: { method: 'POST', url: `${API_URL}/requests/:id/accept` },\n    deliver: { method: 'POST', url: `${API_URL}/requests/:id/deliver` }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('usersShow', {\n      url: '/profile',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('feedbacksIndex', {\n      url: '/feedbacks',\n      templateUrl: '/templates/feedbacksIndex.html',\n      controller: 'FeedbacksIndexController as feedbacksIndex'\n    })\n    .state('feedbacksNew', {\n      url: '/feedbacks/new/:runnerId',\n      templateUrl: '/templates/feedbacksNew.html',\n      controller: 'FeedbacksNewController as feedbacksNew'\n    })\n    .state('feedbacksShow', {\n      url: '/feedbacks/:id',\n      templateUrl: '/templates/feedbacksShow.html',\n      controller: 'FeedbacksShowController as feedbacksShow'\n    })\n    .state('feedbacksEdit', {\n      url: '/feedbacks/:id/edit',\n      templateUrl: '/templates/feedbacksEdit.html',\n      controller: 'FeedbacksEditController as feedbacksEdit'\n    })\n    .state('requestsIndex', {\n      url: '/requests',\n      templateUrl: '/templates/requestsIndex.html',\n      controller: 'RequestsIndexController as requestsIndex'\n    })\n    .state('requestsNew', {\n      url: '/requests/new',\n      templateUrl: '/templates/requestsNew.html',\n      controller: 'RequestsNewController as requestsNew'\n    })\n    .state('requestsShow', {\n      url: '/requests/:id',\n      templateUrl: '/templates/requestsShow.html',\n      controller: 'RequestsShowController as requestsShow'\n    })\n    .state('status', {\n      url: '/status',\n      templateUrl: '/templates/status.html',\n      controller: 'StatusController as status'\n\n    });\n  $urlRouterProvider.otherwise('/login');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  User.get({ id: $auth.getPayload().id }, (user) => {\n    usersShow.user = user;\n\n    console.log(user);\n\n    usersShow.isRunner = user.user_type === 'Runner';\n    usersShow.isCustomer = user.user_type === 'Customer';\n  });\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n  this.update = update;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}